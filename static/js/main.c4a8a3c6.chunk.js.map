{"version":3,"sources":["components/card/card.component.jsx","components/cardList/cardList.component.jsx","components/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","catch","error","console","log","this","filterMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAWeA,EATF,SAACC,GACb,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAC/E,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCKZC,EATA,SAACR,GACb,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCIlBO,G,MATC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC3B,OACI,8BACC,uBAAOZ,UAAU,SAASa,KAAK,OAAOF,YAAaA,EAChDG,SAAUF,QCgCPG,E,kDAhCb,aAAc,IAAD,8BACX,gBAYDH,aAAa,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAG,EAAKT,SAAS,CAACT,SAASkB,OACpCC,OAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAIF,Q,oBAK9B,WACG,MAA6BG,KAAKV,MAA3Bb,EAAP,EAAOA,SAASU,EAAhB,EAAgBA,YACVc,EAAcxB,EAASyB,QAAO,SAAA/B,GAAO,OAAEA,EAAQG,KAAK6B,cAAcC,SAASjB,EAAYgB,kBAC/F,OACE,sBAAKlC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,2BACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcmB,KAAKnB,eAErB,cAAC,EAAD,CAAUJ,SAAUwB,W,GA3BRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4a8a3c6.chunk.js","sourcesContent":["import React from 'react'\nimport \"./card.styles.css\"\nconst Card = (props)=>{\n return(\n     <div className=\"card-container\">\n         <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"\" />\n          <h1>{props.monster.name}</h1>\n          <p>{props.monster.email}</p>\n     </div>\n )\n}\nexport default Card","import React from 'react'\nimport \"./cardList.style.css\"\nimport Card from '../card/card.component'\n const CardList=(props)=>{\n    return (\n        <div className=\"card-list\">\n           {props.monsters.map(monster=>\n              <Card key={monster.id} monster={monster}/>  \n           )}\n        </div>\n    )\n }\n export default CardList;","import React from 'react'\nimport \"./searchBox.styles.css\"\nconst SearchBox=({placeholder, handleChange})=>{\n    return(\n        <div>\n         <input className=\"search\" type=\"text\" placeholder={placeholder}\n            onChange={handleChange}\n         />\n        </div>\n    )\n}\nexport default SearchBox;","import React from 'react';\nimport './App.css';\nimport CardList from './components/cardList/cardList.component';\nimport SearchBox from './components/searchBox/searchBox.component';\nimport { Component } from 'react';\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:\"\",\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(user=> this.setState({monsters:user}))\n    .catch(error=> console.log(error))\n  }\n   handleChange=(e)=>{\n    this.setState({searchField:e.target.value});\n  }\n render(){\n    const {monsters,searchField}=this.state;\n    const filterMonster=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n  return (\n    <div className=\"App\">\n      <h1 className='heading'>Robo Rovoldex</h1>\n      <SearchBox\n        placeholder=\"Search Mosnters\"\n        handleChange={this.handleChange}\n      />\n      <CardList monsters={filterMonster}/>\n    </div>\n  );\n }\n}\n\nexport default App;\n\n\n/*\nTHIS IS IMPORTANT\n\nonChange={e=>{\n  this.setState({searchField:e.target.value},()=>\n  console.log(this.state.searchField));\n}}*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}